@page "/misCitas"
@inject CitaBLL citaBLL
@inject MedicoBLL medicoBLL
@inject ISnackbar toast
@inject Tools tool

@attribute [Authorize(Roles = "Medico")]


    <MudTabs Elevation="2" Rounded="true" Centered="true" Class="mb-1">
        <MudTabPanel Icon="@Icons.Material.Filled.Article" Text="Pendiente" BadgeData="@ListaCitasPendientes.Count" BadgeColor="Color.Info">
            <div class="row mt-2">
                @if (ListaCitasPendientes.Count() > 0)
            {
                foreach (var c in ListaCitasPendientes)
                {
                             <div class="col-sm-3 pl-0 mt-2 pr-0">
                                 <div class="mb-2">
                                      <TarjetaCita Cita="c"></TarjetaCita>
                                 </div>

                             </div>
                }
            }
            else
            {
                    <h1 class="text-center">No hay citas agendadas</h1>
            }
            </div>

        </MudTabPanel>
        <MudTabPanel Icon="@Icons.Material.Filled.Article" Text="Atendida" BadgeData="@ListaCitasAtendidas.Count" BadgeColor="Color.Info">
            <div class="row mt-2">
            @if (ListaCitasAtendidas.Count() > 0)
            {
                foreach (var c in ListaCitasAtendidas)
                {
                                    <div class="col-sm-3 pl-0 mt-2 pr-0">
                                        <div class="mb-2">
                                             <TarjetaCita Cita="c"></TarjetaCita>
                                        </div>

                                    </div>
                }
            }
            else
            {
                    <h1 class="text-center">No hay citas agendadas</h1>
            }
            </div>

        </MudTabPanel>

    </MudTabs>




@code {
    List<Citas> ListaCitasPendientes = new();
    List<Citas> ListaCitasAtendidas = new();

    protected override async Task OnInitializedAsync()
    {
        tool.AppBarTitulo = "Mis Citas";
        ListaCitasPendientes = await citaBLL.ListWhere(c => c.MedicoId == medicoBLL.Medico.MedicoId && c.Atendida == false);
        ListaCitasAtendidas = await citaBLL.ListWhere(c => c.MedicoId == medicoBLL.Medico.MedicoId && c.Atendida == true);
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            using var periodicTimer = new PeriodicTimer(TimeSpan.FromSeconds(2));
            while (await periodicTimer.WaitForNextTickAsync())
            {
                 ListaCitasPendientes = await citaBLL.ListWhere(c => c.MedicoId == medicoBLL.Medico.MedicoId && c.Atendida == false);
                ListaCitasAtendidas = await citaBLL.ListWhere(c => c.MedicoId == medicoBLL.Medico.MedicoId && c.Atendida == true);


                await InvokeAsync(StateHasChanged);
            }
        }
    }
}
