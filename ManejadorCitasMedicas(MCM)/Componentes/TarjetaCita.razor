@inject CitaBLL citaBLL
<div class="card shadow-lg" style="width: 350px">
    @if (!Cita.Atendida)
    {
                        <div class="card-header text-white bg-primary">
                            <h4>@Cita.NombrePaciente</h4>
                        </div>
    }
    else
    {
                        <div class="card-header text-white bg-secondary">
                            <h4>@Cita.NombrePaciente</h4>
                        </div>
    }
    <div class="card-body">
        <h5><b>Inicia:</b> @Cita.Inicia.ToString("g", CultureInfo.GetCultureInfo("en-US"))</h5>

            <h5>
                <b>Finalizó:</b> 
            @(Cita.Atendida ? Cita.Termina.ToString("g", CultureInfo.GetCultureInfo("en-US")) : "--------")
            </h5>
        <h5><b>Descripción:</b> @Cita.Descripcion</h5>
        <h5><b>Creada:</b> @Cita.FechaCreacion.ToString("g", CultureInfo.GetCultureInfo("en-US"))</h5>
        <h5><b>Creador:</b> @Cita.NombreUsuarioCreacion</h5>
    </div>
    <div class="card-footer">
        <div class="form-check">
            <input checked="@Cita.Atendida" disabled="@isReadOnly()" type="checkbox"@oninput="CheckboxChanged" class="form-check-input">
            <label class="form-check-label">
               Atendida
            </label>
        </div>
    </div>
</div>

@code {
        [Parameter]
        public Models.Citas Cita { get; set; }


        bool isReadOnly()
        {
            return !(DateTime.Now.Day >= Cita.Inicia.Day && DateTime.Now.Month >= Cita.Inicia.Month && DateTime.Now.Year >= Cita.Inicia.Year);
        }

    private async Task CheckboxChanged(ChangeEventArgs e)
    {

        Cita.Atendida = (bool)e.Value;
        Cita.Termina = DateTime.Now;
        await citaBLL.Save(Cita);
    }
}
