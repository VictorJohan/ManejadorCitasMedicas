@page "/paciente"
@page "/paciente/{Id:int}"

@inject ISnackbar toast;
@inject PacienteBLL pacienteBLL
@inject Tools tool

@attribute [Authorize(Roles = "Usuario")]

<nav class="m-2">
    <div class="nav nav-tabs" id="nav-tab" role="tablist">
        <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Información Personal</button>
        <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Dirección</button>
    </div>
</nav>
<EditForm Model="@PacienteModel" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <InformacionPersonal Paciente="PacienteModel"></InformacionPersonal>
        </div>
        <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
            <Direccion Paciente="PacienteModel"></Direccion>
        </div>
    </div>
</EditForm>

<button type="button" @onclick="(() => Guardar())" class="btn btn-success ml-3 mt-3">Guardar</button>
@code {
    [Parameter]
    public int Id { get; set; }
    Models.Pacientes PacienteModel;

    protected override async Task OnInitializedAsync()
    {
        tool.AppBarTitulo = "Paciente";
        PacienteModel = new();
        if(Id > 0)
        {
            PacienteModel = await pacienteBLL.Get(Id);
        }
    }

    private async Task Guardar()
    {
        if(await pacienteBLL.Save(PacienteModel))
        {
            toast.Add("Paciente Guardado", Severity.Success);
        }
        else
        {
            toast.Add("Ha ocurrido un error al guardar el pacinte...", Severity.Error);
        }
    }
}