@inject UsuarioBLL usuarioBLL
@inject ISnackbar toast
@inject ProtectedSessionStorage localStorage

<MudTabs Outlined="true" Position="Position.Left" Rounded="true" Border="true"
    ApplyEffectsToContainer="true" Class="mt-8" PanelClass="pa-6">
    <MudTabPanel Text="Información Básica">
        <div class="w-100">
          <div class="card mt-2">
        <div class="card-header">
           <h2>Datos del Usuario</h2>
        </div>
          <div class="card-body">
              @*Nombre y Apellido*@
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                     <label>Nombres</label>
                      <input readonly="@IsReadOnly" @bind="usuarioBLL.Usuario.Nombre" class="form-control" />
                </div>
            </div>
            <div class="col-sm-6">
                 <div class="form-group">
                     <label>Apellidos</label>
                      <input readonly="@IsReadOnly" @bind="usuarioBLL.Usuario.Apellido" class="form-control" />
                </div>
            </div>
        </div>

            @*Email*@

                 <div class="form-group">
                     <label>Email</label>
                      <input readonly="@IsReadOnly" @bind="usuarioBLL.Usuario.Email" class="form-control" />
                </div>

            @*Contrasena*@

                 <div class="form-group">
                     <label>Contraseña</label>
                      <input readonly="@IsReadOnly" type="password" @bind="usuarioBLL.Usuario.Contrasena" class="form-control" />
                </div>

            @*Nombre Usuario*@
                 <div class="form-group">
                     <label>Nombre Usuario</label>
                      <input readonly="@IsReadOnly" @bind="usuarioBLL.Usuario.NombreUsuario" class="form-control" />
                </div>

                 @*Creacion*@
                 <div class="form-group">
                     <label>Creación</label>
                      <input readonly="@IsReadOnly" @bind="usuarioBLL.Usuario.FechaCreacion" class="form-control" />
                </div>
          </div>
         
    </div>
        </div>       
    </MudTabPanel>
    <MudTabPanel Text="Cambiar Contraseña">
       <div class="row">
            @*Contrasena anterior*@
         <div class="form-group">
              <label>Contraseña Anterior</label>
               <input type="password" @bind="contrasenaAnterior" class="form-control" />
         </div>

          @*Contrasena Nueva*@
         <div class="form-group">
              <label>Contraseña Nueva</label>
               <input  type="password" @bind="contrasenaNueva" class="form-control" />
         </div>

          @*Contrasena Confirmacion*@
         <div class="form-group">
              <label>Contraseña Anterior</label>
               <input  type="password" @bind="contrasenaConfir" class="form-control" />
         </div>

         <button type="button" @onclick="CambiarContrasena" class="btn btn-success mt-2 ml-3 col-sm-4">Guardar</button>
       </div>
    </MudTabPanel>

</MudTabs>

@code {
    string contrasenaAnterior = "";
    string contrasenaNueva = "";
    string contrasenaConfir = "";
    Models.Usuarios usuario;
    bool IsReadOnly = true;
    protected override void OnInitialized()
    {
        if(usuarioBLL.Usuario != null)
        {
            usuario = usuarioBLL.Usuario;
        }
    }

    public async Task CambiarContrasena()
    {
        if(usuarioBLL.Usuario.Contrasena != contrasenaAnterior)
        {
            toast.Add("La contraseña anterior es incorrecta", Severity.Error);
            return;
        }

        if(contrasenaNueva != contrasenaConfir)
        {
            toast.Add("Las contraseñas no coinciden", Severity.Error);
            return;
        }

        usuario.Contrasena = contrasenaNueva;

        if(await usuarioBLL.CambiarContrasena(usuario))
        {
            toast.Add("Guardado", Severity.Success);
            usuarioBLL.Usuario.Contrasena = contrasenaNueva;
            await localStorage.SetAsync("usuario", usuarioBLL.Usuario);
            contrasenaAnterior = "";
            contrasenaNueva = "";
            contrasenaConfir = "";
        }
    }
}
